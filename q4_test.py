# -*- coding: utf-8 -*-
"""Q4_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dUjXq9nEOX2PMOboEnFAB_-x-hQGM49x
"""

import numpy as np
import matplotlib.pyplot as plt
from preprocessing.polynomial_features import PolynomialFeatures
from linearRegression.linear_regression import LinearRegression
import pandas as pd
import os.path
from os import path
np.random.seed(42)  #Setting seed for reproducibility

if not path.exists('Plots/Question4/'):
  os.makedirs('Plots/Question4/')

x = np.array([i*np.pi/180 for i in range(60,300,2)])
y = 3*x + 8 + np.random.normal(0,3,len(x))

#TODO : Write here
#Preprocess the input using the polynomial features
#Solve the resulting linear regression problem by calling any one of the 
#algorithms you have implemented.

weights = list()
degree = [i for i in range(1,10)]
for d in degree:
    poly = PolynomialFeatures(d, False)
    X = poly.transform(np.transpose([x]))
    LR = LinearRegression(True)
    LR.fit_normal_equations(pd.DataFrame(data=X), pd.Series(y))
    weights.append(np.linalg.norm(LR.coef_))

plt.figure(figsize=(8,6))
plt.bar(x=degree, height=weights)
plt.yscale("log")
plt.xlabel("Degree")
plt.ylabel("Magnitude of theta vector")
plt.title("Linear Regression using Normal Equation")
plt.savefig("Plots/Question4/fig.png")
plt.close()